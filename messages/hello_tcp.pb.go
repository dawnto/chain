// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello_tcp.proto

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloTCP struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloTCP) Reset()         { *m = HelloTCP{} }
func (m *HelloTCP) String() string { return proto.CompactTextString(m) }
func (*HelloTCP) ProtoMessage()    {}
func (*HelloTCP) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_tcp_861a3c1ed6af75a1, []int{0}
}
func (m *HelloTCP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloTCP.Unmarshal(m, b)
}
func (m *HelloTCP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloTCP.Marshal(b, m, deterministic)
}
func (dst *HelloTCP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloTCP.Merge(dst, src)
}
func (m *HelloTCP) XXX_Size() int {
	return xxx_messageInfo_HelloTCP.Size(m)
}
func (m *HelloTCP) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloTCP.DiscardUnknown(m)
}

var xxx_messageInfo_HelloTCP proto.InternalMessageInfo

func init() {
	proto.RegisterType((*HelloTCP)(nil), "messages.HelloTCP")
}

func init() { proto.RegisterFile("hello_tcp.proto", fileDescriptor_hello_tcp_861a3c1ed6af75a1) }

var fileDescriptor_hello_tcp_861a3c1ed6af75a1 = []byte{
	// 66 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0x48, 0xcd, 0xc9,
	0xc9, 0x8f, 0x2f, 0x49, 0x2e, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xc8, 0x4d, 0x2d,
	0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0x56, 0xe2, 0xe2, 0xe2, 0xf0, 0x00, 0x49, 0x86, 0x38, 0x07, 0x24,
	0xb1, 0x81, 0x25, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x81, 0xeb, 0x9d, 0x96, 0x2f, 0x00,
	0x00, 0x00,
}
